[
  {
    "url": "https://api.github.com/repos/pengwynn/octokit/issues/219",
    "labels_url": "https://api.github.com/repos/pengwynn/octokit/issues/219/labels{/name}",
    "comments_url": "https://api.github.com/repos/pengwynn/octokit/issues/219/comments",
    "events_url": "https://api.github.com/repos/pengwynn/octokit/issues/219/events",
    "html_url": "https://github.com/pengwynn/octokit/issues/219",
    "id": 10812841,
    "number": 219,
    "title": "More consistent formatting of requests in Client",
    "user": {
      "login": "andrew",
      "id": 1060,
      "avatar_url": "https://secure.gravatar.com/avatar/8ddbf811da78bb0daeeb3cacd7cf743f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "8ddbf811da78bb0daeeb3cacd7cf743f",
      "url": "https://api.github.com/users/andrew",
      "html_url": "https://github.com/andrew",
      "followers_url": "https://api.github.com/users/andrew/followers",
      "following_url": "https://api.github.com/users/andrew/following",
      "gists_url": "https://api.github.com/users/andrew/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrew/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrew/subscriptions",
      "organizations_url": "https://api.github.com/users/andrew/orgs",
      "repos_url": "https://api.github.com/users/andrew/repos",
      "events_url": "https://api.github.com/users/andrew/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrew/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-02-09T19:04:14Z",
    "updated_at": "2013-02-09T19:04:14Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/pengwynn/octokit/pull/219",
      "diff_url": "https://github.com/pengwynn/octokit/pull/219.diff",
      "patch_url": "https://github.com/pengwynn/octokit/pull/219.patch"
    },
    "body": "To help the OCD in me, I've wrapped all requests with brackets (most already where) and made options merging more consistent."
  },
  {
    "url": "https://api.github.com/repos/pengwynn/octokit/issues/211",
    "labels_url": "https://api.github.com/repos/pengwynn/octokit/issues/211/labels{/name}",
    "comments_url": "https://api.github.com/repos/pengwynn/octokit/issues/211/comments",
    "events_url": "https://api.github.com/repos/pengwynn/octokit/issues/211/events",
    "html_url": "https://github.com/pengwynn/octokit/issues/211",
    "id": 10564518,
    "number": 211,
    "title": "Enterprise specific api support",
    "user": {
      "login": "joeyw",
      "id": 478247,
      "avatar_url": "https://secure.gravatar.com/avatar/18c2c44835cc7c5ada7c027f12674714?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "18c2c44835cc7c5ada7c027f12674714",
      "url": "https://api.github.com/users/joeyw",
      "html_url": "https://github.com/joeyw",
      "followers_url": "https://api.github.com/users/joeyw/followers",
      "following_url": "https://api.github.com/users/joeyw/following",
      "gists_url": "https://api.github.com/users/joeyw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeyw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyw/subscriptions",
      "organizations_url": "https://api.github.com/users/joeyw/orgs",
      "repos_url": "https://api.github.com/users/joeyw/repos",
      "events_url": "https://api.github.com/users/joeyw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeyw/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/pengwynn/octokit/labels/feature+request",
        "name": "feature request",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-02-02T00:09:55Z",
    "updated_at": "2013-02-02T00:10:22Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "* [ ] [Management console](https://support.enterprise.github.com/entries/23032152-management-console-api)\r\n* [ ] [Admin stats](https://support.enterprise.github.com/entries/21188836-admin-stats-api)\r\n* [ ] [Search indexing](https://support.enterprise.github.com/entries/23050336-search-indexing-api)"
  },
  {
    "url": "https://api.github.com/repos/pengwynn/octokit/issues/198",
    "labels_url": "https://api.github.com/repos/pengwynn/octokit/issues/198/labels{/name}",
    "comments_url": "https://api.github.com/repos/pengwynn/octokit/issues/198/comments",
    "events_url": "https://api.github.com/repos/pengwynn/octokit/issues/198/events",
    "html_url": "https://github.com/pengwynn/octokit/issues/198",
    "id": 9416661,
    "number": 198,
    "title": "Octokit Shell",
    "user": {
      "login": "cored",
      "id": 11719,
      "avatar_url": "https://secure.gravatar.com/avatar/87f83a47ce04e7661ec3c9dfc33b35bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "87f83a47ce04e7661ec3c9dfc33b35bc",
      "url": "https://api.github.com/users/cored",
      "html_url": "https://github.com/cored",
      "followers_url": "https://api.github.com/users/cored/followers",
      "following_url": "https://api.github.com/users/cored/following",
      "gists_url": "https://api.github.com/users/cored/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cored/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cored/subscriptions",
      "organizations_url": "https://api.github.com/users/cored/orgs",
      "repos_url": "https://api.github.com/users/cored/repos",
      "events_url": "https://api.github.com/users/cored/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cored/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2012-12-19T22:08:46Z",
    "updated_at": "2013-01-10T00:07:25Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Hi guys, \r\n\r\nI was wondering if you think it could be a good idea to have some sort of shell for Octokit iterations with the API; it could use this [194](https://github.com/pengwynn/octokit/issues/194)\r\n\r\nWhat do you think?"
  },
  {
    "url": "https://api.github.com/repos/pengwynn/octokit/issues/195",
    "labels_url": "https://api.github.com/repos/pengwynn/octokit/issues/195/labels{/name}",
    "comments_url": "https://api.github.com/repos/pengwynn/octokit/issues/195/comments",
    "events_url": "https://api.github.com/repos/pengwynn/octokit/issues/195/events",
    "html_url": "https://github.com/pengwynn/octokit/issues/195",
    "id": 9130447,
    "number": 195,
    "title": "Conditional requests",
    "user": {
      "login": "brainopia",
      "id": 386,
      "avatar_url": "https://secure.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "254513687a01330ba0ae676538de459b",
      "url": "https://api.github.com/users/brainopia",
      "html_url": "https://github.com/brainopia",
      "followers_url": "https://api.github.com/users/brainopia/followers",
      "following_url": "https://api.github.com/users/brainopia/following",
      "gists_url": "https://api.github.com/users/brainopia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brainopia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brainopia/subscriptions",
      "organizations_url": "https://api.github.com/users/brainopia/orgs",
      "repos_url": "https://api.github.com/users/brainopia/repos",
      "events_url": "https://api.github.com/users/brainopia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brainopia/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 21,
    "created_at": "2012-12-10T06:50:43Z",
    "updated_at": "2013-02-10T20:10:59Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/pengwynn/octokit/pull/195",
      "diff_url": "https://github.com/pengwynn/octokit/pull/195.diff",
      "patch_url": "https://github.com/pengwynn/octokit/pull/195.patch"
    },
    "body": "Since making conditional request does not count against rate limit, it would be great to support it: http://developer.github.com/v3/#conditional-requests\n\nI think, It would be easy to do with additional faraday middleware. This middleware would add information from response version headers (Etag, Last-Modified) to resulting Hashie::Mash. Also it would convert appropriate request params (etag, last-modified) to If-None-Match, If-Modified-Since headers.\n\nWhat do you think @pengwynn?"
  },
  {
    "url": "https://api.github.com/repos/pengwynn/octokit/issues/191",
    "labels_url": "https://api.github.com/repos/pengwynn/octokit/issues/191/labels{/name}",
    "comments_url": "https://api.github.com/repos/pengwynn/octokit/issues/191/comments",
    "events_url": "https://api.github.com/repos/pengwynn/octokit/issues/191/events",
    "html_url": "https://github.com/pengwynn/octokit/issues/191",
    "id": 9062187,
    "number": 191,
    "title": "Users.follows? returns nil if no user is found",
    "user": {
      "login": "x3ro",
      "id": 243719,
      "avatar_url": "https://secure.gravatar.com/avatar/0266e613fe487607b582252ca8ae78f2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "0266e613fe487607b582252ca8ae78f2",
      "url": "https://api.github.com/users/x3ro",
      "html_url": "https://github.com/x3ro",
      "followers_url": "https://api.github.com/users/x3ro/followers",
      "following_url": "https://api.github.com/users/x3ro/following",
      "gists_url": "https://api.github.com/users/x3ro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/x3ro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/x3ro/subscriptions",
      "organizations_url": "https://api.github.com/users/x3ro/orgs",
      "repos_url": "https://api.github.com/users/x3ro/repos",
      "events_url": "https://api.github.com/users/x3ro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/x3ro/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2012-12-06T18:03:34Z",
    "updated_at": "2012-12-06T22:13:42Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Just saw this while refactoring. Not sure if its worth an issue, but I'll let you judge :)\n\n    # lib/octokit/users.rb\n    # Check if you are following a user.\n    #\n    # Requries an authenticated client.\n    #\n    # @param user [String] Username of the user that you want to check if you are following.\n    # @return [Boolean] True if you are following the user, false otherwise.\n    # @see Octokit::Client\n    # @see http://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user\n    # @example\n    #   @client.follows?('pengwynn')\n    def follows?(*args)\n      target = args.pop\n      user = args.first\n      user ||= login\n      return if user.nil?\n      request(:get, \"user/following/#{target}\").status == 204\n    rescue Octokit::NotFound\n      false\n    end\n\nRight before the request it returns `nil` if no user was found. Shouldn't that throw an `ArgumentError` (because `follows?` should return a boolean)? \n"
  }
]
